/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hcs.view;

import conexao.bd.DadosConexaoAWS;
import conexao.bd.Funcionario;
import conexao.bd.Carro;
import conexao.bd.Dispositivo;
import conexao.bd.Empresa;
import java.util.List;
import javax.swing.JOptionPane;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;

/**
 *
 * @author jvsal
 */
public class PainelAdm extends javax.swing.JFrame {

    DadosConexaoAWS database = new DadosConexaoAWS();
    JdbcTemplate connection = database.getConnection();

//    TelaLogin login = new TelaLogin();
    List<Funcionario> funcionariosAll = connection.query("SELECT * FROM Funcionario;", new BeanPropertyRowMapper(Funcionario.class));
    List<Carro> carrosAll = connection.query("SELECT * FROM Carro;", new BeanPropertyRowMapper(Carro.class));
    List<Dispositivo> dispositivosAll = connection.query("SELECT * FROM Dispositivo;", new BeanPropertyRowMapper(Dispositivo.class));
    List<Empresa> empresasAll = connection.query("SELECT * FROM Empresa;", new BeanPropertyRowMapper(Empresa.class));

    Integer totalEmpresas = empresasAll.size();
    String vetorEmpresasNome[] = new String[totalEmpresas];
    // Integer vetorEmpresasId[] = new Integer[totalEmpresas];
    String formatacaoBoxFuncionario = "";

    Integer qtdFuncionarios = 0;
    Integer qtdCarros = 0;
    Integer qtdEmpresas = 0;

    Integer importLogin = Verificacao.getIntVerificacao();
    String importNome = Verificacao.getNomeVerificacao();

    String empresaSessao = "";
    
    public PainelAdm() {
        initComponents();

        if (importLogin != 1) {
            cLabelIdEmpresa.setVisible(false);
            cIdEmpresaFuncionario.setVisible(false);
                    
            cLabelEmpresaCarro.setVisible(false);
            cIdEmpresaCarro.setVisible(false);
            labelPermissoesHcs.setVisible(false);
        } else {
            labelEmpresa.setVisible(false);
        }
        
        labelTitulo.setText("Seja bem vindo(a) " + importNome);
        
        painelCadastroFuncionario.setVisible(false);
        painelCadastroCarro.setVisible(false);
        painelCadastroDispositivo.setVisible(false);
        painelCadastroEmpresa.setVisible(false);

        painelRemoverFuncionario.setVisible(false);
        painelRemoverCarro.setVisible(false);
        painelRemoverDispositivo.setVisible(false);
        painelRemoverEmpresa.setVisible(false);

        painelVerificarFuncionario.setVisible(false);
        painelVerificarCarro.setVisible(false);
        painelVerificarDispositivo.setVisible(false);
        painelVerificarEmpresa.setVisible(false);

        bInicio.setVisible(false);

        bCadastrarFuncionario.setVisible(false);
        bEditarFuncionario.setVisible(false);
        bRemoverFuncionario.setVisible(false);
        bConsultarFuncionario.setVisible(false);

        bCadastrarCarro.setVisible(false);
        bEditarCarro.setVisible(false);
        bRemoverCarro.setVisible(false);
        bConsultarCarro.setVisible(false);

        bCadastrarDispositivo.setVisible(false);
        bEditarDispositivo.setVisible(false);
        bRemoverDispositivo.setVisible(false);
        bConsultarDispositivo.setVisible(false);

        bCadastrarEmpresa.setVisible(false);
        bEditarEmpresa.setVisible(false);
        bRemoverEmpresa.setVisible(false);
        bConsultarEmpresa.setVisible(false);

        for (int i = 0; i < funcionariosAll.size(); i++) {
            qtdFuncionarios++;
        }

        for (int i = 0; i < carrosAll.size(); i++) {
            qtdCarros++;
        }

        for (int i = 0; i < empresasAll.size(); i++) {
            qtdEmpresas++;
        }

        labelQtdFuncionarios.setText(String.valueOf(qtdFuncionarios));
        labelQtdCarros.setText(String.valueOf(qtdCarros));
        labelQtdEmpresas.setText(String.valueOf(qtdEmpresas));
        
        for (Empresa empresa : empresasAll) {
            if (empresa.getId_empresa().equals(importLogin)) {
                empresaSessao = empresa.getNome_empresa();
            }
        }
        labelEmpresa.setText(empresaSessao);
    }

    public final void verificarEmpresas() {
        for (int i = 0; i < totalEmpresas; i++) {
            vetorEmpresasNome[i] = empresasAll.get(i).getNome_empresa();
            //  vetorEmpresasId[i] = empresasAll.get(i).getId_empresa();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jFrame1 = new javax.swing.JFrame();
        jDialog1 = new javax.swing.JDialog();
        labelTitulo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bCadastrar = new javax.swing.JButton();
        bEditar = new javax.swing.JButton();
        bRemover = new javax.swing.JButton();
        bCadastrarFuncionario = new javax.swing.JButton();
        bEditarFuncionario = new javax.swing.JButton();
        bRemoverFuncionario = new javax.swing.JButton();
        bCadastrarCarro = new javax.swing.JButton();
        bEditarCarro = new javax.swing.JButton();
        bRemoverCarro = new javax.swing.JButton();
        bInicio = new javax.swing.JButton();
        bCadastrarDispositivo = new javax.swing.JButton();
        bEditarDispositivo = new javax.swing.JButton();
        bRemoverDispositivo = new javax.swing.JButton();
        bCadastrarEmpresa = new javax.swing.JButton();
        bEditarEmpresa = new javax.swing.JButton();
        bRemoverEmpresa = new javax.swing.JButton();
        bConsultar = new javax.swing.JButton();
        bConsultarFuncionario = new javax.swing.JButton();
        bConsultarCarro = new javax.swing.JButton();
        bConsultarEmpresa = new javax.swing.JButton();
        bConsultarDispositivo = new javax.swing.JButton();
        painelCadastroFuncionario = new javax.swing.JPanel();
        cNomeFuncionario = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cNivelAcessoFuncionario = new javax.swing.JComboBox<>();
        cEmailFuncionario = new javax.swing.JTextField();
        cSenhaFuncionario = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        bCadastrarFuncionarioPainel = new javax.swing.JButton();
        cLabelIdEmpresa = new javax.swing.JLabel();
        cCpfFuncionario = new javax.swing.JFormattedTextField();
        cIdEmpresaFuncionario = new javax.swing.JSpinner();
        painelCadastroCarro = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cLabelEmpresaCarro = new javax.swing.JLabel();
        cModeloCarro = new javax.swing.JTextField();
        bCadastrarCarroPainel = new javax.swing.JButton();
        cIdEmpresaCarro = new javax.swing.JSpinner();
        cMacCarro = new javax.swing.JFormattedTextField();
        cPlacaCarro = new javax.swing.JFormattedTextField();
        painelCadastroDispositivo = new javax.swing.JPanel();
        cTipoDispositivo = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        cModeloDispositivo = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        bCadastrarDispositivoPainel = new javax.swing.JButton();
        cIdCarroDispositivo = new javax.swing.JSpinner();
        jLabel27 = new javax.swing.JLabel();
        cUnidadeMedidaDispositivo = new javax.swing.JTextField();
        painelCadastroEmpresa = new javax.swing.JPanel();
        cNomeEmpresa = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        bCadastrarEmpresaPainel = new javax.swing.JButton();
        cCnpjEmpresa = new javax.swing.JFormattedTextField();
        painelRemoverFuncionario = new javax.swing.JPanel();
        rNomeFuncionario = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        bRemoverFuncionarioPainel = new javax.swing.JButton();
        rCpfFuncionario = new javax.swing.JFormattedTextField();
        painelRemoverDispositivo = new javax.swing.JPanel();
        rModeloDispositivo = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        bRemoverDispositivoPainel = new javax.swing.JButton();
        rIdCarroDispositivo = new javax.swing.JSpinner();
        painelRemoverCarro = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        bRemoverCarroPainel = new javax.swing.JButton();
        rPlacaCarro = new javax.swing.JFormattedTextField();
        rMacCarro = new javax.swing.JFormattedTextField();
        painelRemoverEmpresa = new javax.swing.JPanel();
        rNomeEmpresa = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        bRemoverEmpresaPainel = new javax.swing.JButton();
        rCnpjEmpresa = new javax.swing.JFormattedTextField();
        painelVerificarFuncionario = new javax.swing.JPanel();
        vNomeFuncionario = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        bConsultarFuncionarioPainel = new javax.swing.JButton();
        painelVerificarCarro = new javax.swing.JPanel();
        vModeloCarro = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        bConsultarCarroPainel = new javax.swing.JButton();
        jLabel51 = new javax.swing.JLabel();
        vPlacaCarro = new javax.swing.JFormattedTextField();
        painelVerificarDispositivo = new javax.swing.JPanel();
        vModeloDispositivo = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        bConsultarDispositivoPainel = new javax.swing.JButton();
        vIdCarroDispositivo = new javax.swing.JSpinner();
        jLabel52 = new javax.swing.JLabel();
        painelVerificarEmpresa = new javax.swing.JPanel();
        vNomeEmpresa = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        bConsultarEmpresaPainel = new javax.swing.JButton();
        painelInfos = new javax.swing.JPanel();
        labelTCarros = new javax.swing.JLabel();
        labelQtdFuncionarios = new javax.swing.JLabel();
        labelQtdCarros = new javax.swing.JLabel();
        labelTEmpresas = new javax.swing.JLabel();
        labelQtdEmpresas = new javax.swing.JLabel();
        labelTFuncionarios = new javax.swing.JLabel();
        labelPermissoesHcs = new javax.swing.JLabel();
        labelEmpresa = new javax.swing.JLabel();
        bEncerrarSessao = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jMenu1.setText("jMenu1");

        jMenuItem1.setText("jMenuItem1");

        jMenu2.setText("jMenu2");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        labelTitulo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelTitulo.setText("Bem vindo ao painél de administrador");

        jLabel2.setText("Selecione o que deseja fazer");

        bCadastrar.setBackground(new java.awt.Color(15, 113, 115));
        bCadastrar.setForeground(new java.awt.Color(255, 255, 255));
        bCadastrar.setText("Cadastrar");
        bCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCadastrarActionPerformed(evt);
            }
        });

        bEditar.setBackground(new java.awt.Color(244, 211, 94));
        bEditar.setText("Editar");
        bEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditarActionPerformed(evt);
            }
        });

        bRemover.setBackground(new java.awt.Color(240, 93, 94));
        bRemover.setForeground(new java.awt.Color(255, 255, 255));
        bRemover.setText("Remover");
        bRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRemoverActionPerformed(evt);
            }
        });

        bCadastrarFuncionario.setText("Cadastrar funcionário");
        bCadastrarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCadastrarFuncionarioActionPerformed(evt);
            }
        });

        bEditarFuncionario.setText("Editar funcionário");
        bEditarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditarFuncionarioActionPerformed(evt);
            }
        });

        bRemoverFuncionario.setText("Remover funcionário");
        bRemoverFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRemoverFuncionarioActionPerformed(evt);
            }
        });

        bCadastrarCarro.setText("Cadastrar carro");
        bCadastrarCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCadastrarCarroActionPerformed(evt);
            }
        });

        bEditarCarro.setText("Editar carro");
        bEditarCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditarCarroActionPerformed(evt);
            }
        });

        bRemoverCarro.setText("Remover carro");
        bRemoverCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRemoverCarroActionPerformed(evt);
            }
        });

        bInicio.setBackground(new java.awt.Color(57, 32, 97));
        bInicio.setForeground(new java.awt.Color(255, 255, 255));
        bInicio.setText("Voltar");
        bInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInicioActionPerformed(evt);
            }
        });

        bCadastrarDispositivo.setText("Cadastrar dispositivo");
        bCadastrarDispositivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCadastrarDispositivoActionPerformed(evt);
            }
        });

        bEditarDispositivo.setText("Editar dispositivo");
        bEditarDispositivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditarDispositivoActionPerformed(evt);
            }
        });

        bRemoverDispositivo.setText("Remover dispositivo");
        bRemoverDispositivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRemoverDispositivoActionPerformed(evt);
            }
        });

        bCadastrarEmpresa.setText("Cadastrar empresa");
        bCadastrarEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCadastrarEmpresaActionPerformed(evt);
            }
        });

        bEditarEmpresa.setText("Editar empresa");
        bEditarEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditarEmpresaActionPerformed(evt);
            }
        });

        bRemoverEmpresa.setText("Remover empresa");
        bRemoverEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRemoverEmpresaActionPerformed(evt);
            }
        });

        bConsultar.setBackground(new java.awt.Color(8, 61, 119));
        bConsultar.setForeground(new java.awt.Color(255, 255, 255));
        bConsultar.setText("Consultar");
        bConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConsultarActionPerformed(evt);
            }
        });

        bConsultarFuncionario.setText("Consultar funcionário");
        bConsultarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConsultarFuncionarioActionPerformed(evt);
            }
        });

        bConsultarCarro.setText("Consultar carro");
        bConsultarCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConsultarCarroActionPerformed(evt);
            }
        });

        bConsultarEmpresa.setText("Consultar empresa");
        bConsultarEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConsultarEmpresaActionPerformed(evt);
            }
        });

        bConsultarDispositivo.setText("Consultar dispositivo");
        bConsultarDispositivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConsultarDispositivoActionPerformed(evt);
            }
        });

        painelCadastroFuncionario.setBackground(new java.awt.Color(235, 235, 211));
        painelCadastroFuncionario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        cNomeFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cNomeFuncionarioActionPerformed(evt);
            }
        });

        jLabel3.setText("Nome:");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Cadastro de funcionário");

        jLabel5.setText("CPF:");

        jLabel6.setText("Email:");

        jLabel7.setText("Senha:");

        cNivelAcessoFuncionario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Administrador", "Gestor", "Técnico" }));
        cNivelAcessoFuncionario.setInheritsPopupMenu(true);
        cNivelAcessoFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cNivelAcessoFuncionarioActionPerformed(evt);
            }
        });

        cEmailFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cEmailFuncionarioActionPerformed(evt);
            }
        });

        cSenhaFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cSenhaFuncionarioActionPerformed(evt);
            }
        });

        jLabel8.setText("Nível de acesso:");

        bCadastrarFuncionarioPainel.setBackground(new java.awt.Color(114, 155, 121));
        bCadastrarFuncionarioPainel.setForeground(new java.awt.Color(255, 255, 255));
        bCadastrarFuncionarioPainel.setText("Cadastrar");
        bCadastrarFuncionarioPainel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCadastrarFuncionarioPainelActionPerformed(evt);
            }
        });

        cLabelIdEmpresa.setText("ID empresa:");

        try {
            cCpfFuncionario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        cIdEmpresaFuncionario.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        javax.swing.GroupLayout painelCadastroFuncionarioLayout = new javax.swing.GroupLayout(painelCadastroFuncionario);
        painelCadastroFuncionario.setLayout(painelCadastroFuncionarioLayout);
        painelCadastroFuncionarioLayout.setHorizontalGroup(
            painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastroFuncionarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCadastroFuncionarioLayout.createSequentialGroup()
                        .addGroup(painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelCadastroFuncionarioLayout.createSequentialGroup()
                                .addGroup(painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)
                                .addGroup(painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cSenhaFuncionario)
                                    .addComponent(cEmailFuncionario)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelCadastroFuncionarioLayout.createSequentialGroup()
                                .addGroup(painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(28, 28, 28)
                                .addGroup(painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cNomeFuncionario)
                                    .addComponent(cCpfFuncionario)))
                            .addGroup(painelCadastroFuncionarioLayout.createSequentialGroup()
                                .addGroup(painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(cLabelIdEmpresa))
                                .addGap(34, 34, 34)
                                .addGroup(painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cNivelAcessoFuncionario, 0, 131, Short.MAX_VALUE)
                                    .addComponent(cIdEmpresaFuncionario))))
                        .addContainerGap())
                    .addGroup(painelCadastroFuncionarioLayout.createSequentialGroup()
                        .addGroup(painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(bCadastrarFuncionarioPainel))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        painelCadastroFuncionarioLayout.setVerticalGroup(
            painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastroFuncionarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cNomeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cCpfFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cEmailFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cSenhaFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cIdEmpresaFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cLabelIdEmpresa))
                .addGap(18, 18, 18)
                .addGroup(painelCadastroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cNivelAcessoFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bCadastrarFuncionarioPainel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelCadastroCarro.setBackground(new java.awt.Color(235, 235, 211));
        painelCadastroCarro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel9.setText("Endereço MAC:");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel10.setText("Cadastro de veículo");

        jLabel11.setText("Placa:");

        jLabel12.setText("Modelo:");

        cLabelEmpresaCarro.setText("ID empresa:");

        cModeloCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cModeloCarroActionPerformed(evt);
            }
        });

        bCadastrarCarroPainel.setBackground(new java.awt.Color(114, 155, 121));
        bCadastrarCarroPainel.setForeground(new java.awt.Color(255, 255, 255));
        bCadastrarCarroPainel.setText("Cadastrar");
        bCadastrarCarroPainel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCadastrarCarroPainelActionPerformed(evt);
            }
        });

        cIdEmpresaCarro.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        try {
            cMacCarro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("AA-AA-AA-AA-AA-AA")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            cPlacaCarro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("???####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout painelCadastroCarroLayout = new javax.swing.GroupLayout(painelCadastroCarro);
        painelCadastroCarro.setLayout(painelCadastroCarroLayout);
        painelCadastroCarroLayout.setHorizontalGroup(
            painelCadastroCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastroCarroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCadastroCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCadastroCarroLayout.createSequentialGroup()
                        .addGroup(painelCadastroCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10)
                            .addComponent(bCadastrarCarroPainel)
                            .addGroup(painelCadastroCarroLayout.createSequentialGroup()
                                .addGroup(painelCadastroCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21)
                                .addGroup(painelCadastroCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cMacCarro, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                    .addComponent(cPlacaCarro))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(painelCadastroCarroLayout.createSequentialGroup()
                        .addGroup(painelCadastroCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cLabelEmpresaCarro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(painelCadastroCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelCadastroCarroLayout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(cModeloCarro))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCadastroCarroLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                                .addComponent(cIdEmpresaCarro, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        painelCadastroCarroLayout.setVerticalGroup(
            painelCadastroCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastroCarroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addGroup(painelCadastroCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(cMacCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelCadastroCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cPlacaCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelCadastroCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cModeloCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelCadastroCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cLabelEmpresaCarro)
                    .addComponent(cIdEmpresaCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(bCadastrarCarroPainel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelCadastroDispositivo.setBackground(new java.awt.Color(235, 235, 211));
        painelCadastroDispositivo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        cTipoDispositivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cTipoDispositivoActionPerformed(evt);
            }
        });

        jLabel19.setText("Tipo:");

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel20.setText("Cadastro de dispositivo");

        jLabel21.setText("Modelo:");

        cModeloDispositivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cModeloDispositivoActionPerformed(evt);
            }
        });

        jLabel23.setText("ID veículo");

        bCadastrarDispositivoPainel.setBackground(new java.awt.Color(114, 155, 121));
        bCadastrarDispositivoPainel.setForeground(new java.awt.Color(255, 255, 255));
        bCadastrarDispositivoPainel.setText("Cadastrar");
        bCadastrarDispositivoPainel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCadastrarDispositivoPainelActionPerformed(evt);
            }
        });

        cIdCarroDispositivo.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel27.setText("Unidade de medida:");

        cUnidadeMedidaDispositivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cUnidadeMedidaDispositivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelCadastroDispositivoLayout = new javax.swing.GroupLayout(painelCadastroDispositivo);
        painelCadastroDispositivo.setLayout(painelCadastroDispositivoLayout);
        painelCadastroDispositivoLayout.setHorizontalGroup(
            painelCadastroDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastroDispositivoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCadastroDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelCadastroDispositivoLayout.createSequentialGroup()
                        .addGroup(painelCadastroDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(bCadastrarDispositivoPainel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(painelCadastroDispositivoLayout.createSequentialGroup()
                        .addGroup(painelCadastroDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelCadastroDispositivoLayout.createSequentialGroup()
                                .addGroup(painelCadastroDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                                .addGroup(painelCadastroDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cModeloDispositivo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cTipoDispositivo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(painelCadastroDispositivoLayout.createSequentialGroup()
                                .addGroup(painelCadastroDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel27))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(painelCadastroDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cIdCarroDispositivo, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                                    .addComponent(cUnidadeMedidaDispositivo))))
                        .addContainerGap())))
        );
        painelCadastroDispositivoLayout.setVerticalGroup(
            painelCadastroDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastroDispositivoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addGap(18, 18, 18)
                .addGroup(painelCadastroDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(cTipoDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelCadastroDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(cModeloDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelCadastroDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(cUnidadeMedidaDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(painelCadastroDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cIdCarroDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(18, 18, 18)
                .addComponent(bCadastrarDispositivoPainel)
                .addContainerGap())
        );

        painelCadastroEmpresa.setBackground(new java.awt.Color(235, 235, 211));
        painelCadastroEmpresa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        cNomeEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cNomeEmpresaActionPerformed(evt);
            }
        });

        jLabel22.setText("Nome:");

        jLabel24.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel24.setText("Cadastro de empresa");

        jLabel25.setText("CNPJ:");

        bCadastrarEmpresaPainel.setBackground(new java.awt.Color(114, 155, 121));
        bCadastrarEmpresaPainel.setForeground(new java.awt.Color(255, 255, 255));
        bCadastrarEmpresaPainel.setText("Cadastrar");
        bCadastrarEmpresaPainel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCadastrarEmpresaPainelActionPerformed(evt);
            }
        });

        try {
            cCnpjEmpresa.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout painelCadastroEmpresaLayout = new javax.swing.GroupLayout(painelCadastroEmpresa);
        painelCadastroEmpresa.setLayout(painelCadastroEmpresaLayout);
        painelCadastroEmpresaLayout.setHorizontalGroup(
            painelCadastroEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastroEmpresaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCadastroEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(bCadastrarEmpresaPainel)
                    .addGroup(painelCadastroEmpresaLayout.createSequentialGroup()
                        .addGroup(painelCadastroEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelCadastroEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cNomeEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                            .addComponent(cCnpjEmpresa))))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        painelCadastroEmpresaLayout.setVerticalGroup(
            painelCadastroEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastroEmpresaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24)
                .addGap(18, 18, 18)
                .addGroup(painelCadastroEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(cNomeEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelCadastroEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(cCnpjEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bCadastrarEmpresaPainel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelRemoverFuncionario.setBackground(new java.awt.Color(235, 235, 211));
        painelRemoverFuncionario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        rNomeFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rNomeFuncionarioActionPerformed(evt);
            }
        });

        jLabel17.setText("Nome:");

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel18.setText("Remover funcionário");

        jLabel26.setText("CPF:");

        bRemoverFuncionarioPainel.setBackground(new java.awt.Color(240, 93, 94));
        bRemoverFuncionarioPainel.setForeground(new java.awt.Color(255, 255, 255));
        bRemoverFuncionarioPainel.setText("Remover");
        bRemoverFuncionarioPainel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRemoverFuncionarioPainelActionPerformed(evt);
            }
        });

        try {
            rCpfFuncionario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout painelRemoverFuncionarioLayout = new javax.swing.GroupLayout(painelRemoverFuncionario);
        painelRemoverFuncionario.setLayout(painelRemoverFuncionarioLayout);
        painelRemoverFuncionarioLayout.setHorizontalGroup(
            painelRemoverFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRemoverFuncionarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelRemoverFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelRemoverFuncionarioLayout.createSequentialGroup()
                        .addGroup(painelRemoverFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addGroup(painelRemoverFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelRemoverFuncionarioLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(rNomeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(rCpfFuncionario))
                        .addGap(28, 28, 28))
                    .addGroup(painelRemoverFuncionarioLayout.createSequentialGroup()
                        .addGroup(painelRemoverFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(bRemoverFuncionarioPainel))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        painelRemoverFuncionarioLayout.setVerticalGroup(
            painelRemoverFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRemoverFuncionarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addGroup(painelRemoverFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(rNomeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelRemoverFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(rCpfFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bRemoverFuncionarioPainel)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        painelRemoverDispositivo.setBackground(new java.awt.Color(235, 235, 211));
        painelRemoverDispositivo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        rModeloDispositivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rModeloDispositivoActionPerformed(evt);
            }
        });

        jLabel30.setText("Modelo:");

        jLabel31.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel31.setText("Remover dispositivo");

        jLabel32.setText("ID veículo:");

        bRemoverDispositivoPainel.setBackground(new java.awt.Color(240, 93, 94));
        bRemoverDispositivoPainel.setForeground(new java.awt.Color(255, 255, 255));
        bRemoverDispositivoPainel.setText("Remover");
        bRemoverDispositivoPainel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRemoverDispositivoPainelActionPerformed(evt);
            }
        });

        rIdCarroDispositivo.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        javax.swing.GroupLayout painelRemoverDispositivoLayout = new javax.swing.GroupLayout(painelRemoverDispositivo);
        painelRemoverDispositivo.setLayout(painelRemoverDispositivoLayout);
        painelRemoverDispositivoLayout.setHorizontalGroup(
            painelRemoverDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRemoverDispositivoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelRemoverDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelRemoverDispositivoLayout.createSequentialGroup()
                        .addGroup(painelRemoverDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(jLabel32))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(painelRemoverDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rIdCarroDispositivo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rModeloDispositivo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63))
                    .addGroup(painelRemoverDispositivoLayout.createSequentialGroup()
                        .addGroup(painelRemoverDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31)
                            .addComponent(bRemoverDispositivoPainel))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        painelRemoverDispositivoLayout.setVerticalGroup(
            painelRemoverDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRemoverDispositivoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31)
                .addGap(18, 18, 18)
                .addGroup(painelRemoverDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(rModeloDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelRemoverDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(rIdCarroDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bRemoverDispositivoPainel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelRemoverCarro.setBackground(new java.awt.Color(235, 235, 211));
        painelRemoverCarro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel33.setText("Endereço MAC:");

        jLabel34.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel34.setText("Remover veículo");

        jLabel35.setText("Placa:");

        bRemoverCarroPainel.setBackground(new java.awt.Color(240, 93, 94));
        bRemoverCarroPainel.setForeground(new java.awt.Color(255, 255, 255));
        bRemoverCarroPainel.setText("Remover");
        bRemoverCarroPainel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRemoverCarroPainelActionPerformed(evt);
            }
        });

        try {
            rPlacaCarro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("???####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            rMacCarro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("AA-AA-AA-AA-AA-AA")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout painelRemoverCarroLayout = new javax.swing.GroupLayout(painelRemoverCarro);
        painelRemoverCarro.setLayout(painelRemoverCarroLayout);
        painelRemoverCarroLayout.setHorizontalGroup(
            painelRemoverCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRemoverCarroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelRemoverCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelRemoverCarroLayout.createSequentialGroup()
                        .addGroup(painelRemoverCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(painelRemoverCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rPlacaCarro)
                            .addComponent(rMacCarro, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                        .addGap(66, 66, 66))
                    .addGroup(painelRemoverCarroLayout.createSequentialGroup()
                        .addGroup(painelRemoverCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34)
                            .addComponent(bRemoverCarroPainel))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        painelRemoverCarroLayout.setVerticalGroup(
            painelRemoverCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRemoverCarroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel34)
                .addGap(18, 18, 18)
                .addGroup(painelRemoverCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(rMacCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelRemoverCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35)
                    .addComponent(rPlacaCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bRemoverCarroPainel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelRemoverEmpresa.setBackground(new java.awt.Color(235, 235, 211));
        painelRemoverEmpresa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        rNomeEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rNomeEmpresaActionPerformed(evt);
            }
        });

        jLabel36.setText("Nome:");

        jLabel37.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel37.setText("Remover empresa");

        jLabel38.setText("CNPJ:");

        bRemoverEmpresaPainel.setBackground(new java.awt.Color(240, 93, 94));
        bRemoverEmpresaPainel.setForeground(new java.awt.Color(255, 255, 255));
        bRemoverEmpresaPainel.setText("Remover");
        bRemoverEmpresaPainel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRemoverEmpresaPainelActionPerformed(evt);
            }
        });

        try {
            rCnpjEmpresa.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout painelRemoverEmpresaLayout = new javax.swing.GroupLayout(painelRemoverEmpresa);
        painelRemoverEmpresa.setLayout(painelRemoverEmpresaLayout);
        painelRemoverEmpresaLayout.setHorizontalGroup(
            painelRemoverEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRemoverEmpresaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelRemoverEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelRemoverEmpresaLayout.createSequentialGroup()
                        .addGroup(painelRemoverEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(painelRemoverEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rCnpjEmpresa)
                            .addComponent(rNomeEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                        .addGap(55, 55, 55))
                    .addGroup(painelRemoverEmpresaLayout.createSequentialGroup()
                        .addGroup(painelRemoverEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37)
                            .addComponent(bRemoverEmpresaPainel))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        painelRemoverEmpresaLayout.setVerticalGroup(
            painelRemoverEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRemoverEmpresaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel37)
                .addGap(18, 18, 18)
                .addGroup(painelRemoverEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(rNomeEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelRemoverEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(rCnpjEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bRemoverEmpresaPainel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelVerificarFuncionario.setBackground(new java.awt.Color(235, 235, 211));
        painelVerificarFuncionario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        vNomeFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vNomeFuncionarioActionPerformed(evt);
            }
        });

        jLabel39.setText("Nome:");

        jLabel40.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel40.setText("Consultar funcionário");

        bConsultarFuncionarioPainel.setBackground(new java.awt.Color(8, 61, 119));
        bConsultarFuncionarioPainel.setForeground(new java.awt.Color(255, 255, 255));
        bConsultarFuncionarioPainel.setText("Consultar");
        bConsultarFuncionarioPainel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConsultarFuncionarioPainelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelVerificarFuncionarioLayout = new javax.swing.GroupLayout(painelVerificarFuncionario);
        painelVerificarFuncionario.setLayout(painelVerificarFuncionarioLayout);
        painelVerificarFuncionarioLayout.setHorizontalGroup(
            painelVerificarFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelVerificarFuncionarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelVerificarFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelVerificarFuncionarioLayout.createSequentialGroup()
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(vNomeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addGroup(painelVerificarFuncionarioLayout.createSequentialGroup()
                        .addGroup(painelVerificarFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40)
                            .addComponent(bConsultarFuncionarioPainel))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        painelVerificarFuncionarioLayout.setVerticalGroup(
            painelVerificarFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelVerificarFuncionarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel40)
                .addGap(18, 18, 18)
                .addGroup(painelVerificarFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(vNomeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bConsultarFuncionarioPainel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelVerificarCarro.setBackground(new java.awt.Color(235, 235, 211));
        painelVerificarCarro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        vModeloCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vModeloCarroActionPerformed(evt);
            }
        });

        jLabel45.setText("Modelo:");

        jLabel46.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel46.setText("Consultar Veículo");

        bConsultarCarroPainel.setBackground(new java.awt.Color(8, 61, 119));
        bConsultarCarroPainel.setForeground(new java.awt.Color(255, 255, 255));
        bConsultarCarroPainel.setText("Consultar");
        bConsultarCarroPainel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConsultarCarroPainelActionPerformed(evt);
            }
        });

        jLabel51.setText("Placa:");

        try {
            vPlacaCarro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("???####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout painelVerificarCarroLayout = new javax.swing.GroupLayout(painelVerificarCarro);
        painelVerificarCarro.setLayout(painelVerificarCarroLayout);
        painelVerificarCarroLayout.setHorizontalGroup(
            painelVerificarCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelVerificarCarroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelVerificarCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelVerificarCarroLayout.createSequentialGroup()
                        .addGroup(painelVerificarCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel46)
                            .addComponent(bConsultarCarroPainel))
                        .addGap(0, 97, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelVerificarCarroLayout.createSequentialGroup()
                        .addGroup(painelVerificarCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel45)
                            .addComponent(jLabel51))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(painelVerificarCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(vModeloCarro)
                            .addComponent(vPlacaCarro, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))))
                .addContainerGap())
        );
        painelVerificarCarroLayout.setVerticalGroup(
            painelVerificarCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelVerificarCarroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel46)
                .addGap(18, 18, 18)
                .addGroup(painelVerificarCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(vModeloCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelVerificarCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel51)
                    .addComponent(vPlacaCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bConsultarCarroPainel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelVerificarDispositivo.setBackground(new java.awt.Color(235, 235, 211));
        painelVerificarDispositivo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        vModeloDispositivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vModeloDispositivoActionPerformed(evt);
            }
        });

        jLabel47.setText("Modelo:");

        jLabel48.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel48.setText("Consultar dispositivo");

        bConsultarDispositivoPainel.setBackground(new java.awt.Color(8, 61, 119));
        bConsultarDispositivoPainel.setForeground(new java.awt.Color(255, 255, 255));
        bConsultarDispositivoPainel.setText("Consultar");
        bConsultarDispositivoPainel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConsultarDispositivoPainelActionPerformed(evt);
            }
        });

        vIdCarroDispositivo.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel52.setText("ID veículo:");

        javax.swing.GroupLayout painelVerificarDispositivoLayout = new javax.swing.GroupLayout(painelVerificarDispositivo);
        painelVerificarDispositivo.setLayout(painelVerificarDispositivoLayout);
        painelVerificarDispositivoLayout.setHorizontalGroup(
            painelVerificarDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelVerificarDispositivoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelVerificarDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelVerificarDispositivoLayout.createSequentialGroup()
                        .addComponent(jLabel52)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(vIdCarroDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelVerificarDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(painelVerificarDispositivoLayout.createSequentialGroup()
                            .addComponent(jLabel47)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(vModeloDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel48)
                        .addComponent(bConsultarDispositivoPainel)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        painelVerificarDispositivoLayout.setVerticalGroup(
            painelVerificarDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelVerificarDispositivoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel48)
                .addGap(18, 18, 18)
                .addGroup(painelVerificarDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(vModeloDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(painelVerificarDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52)
                    .addComponent(vIdCarroDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bConsultarDispositivoPainel)
                .addContainerGap())
        );

        painelVerificarEmpresa.setBackground(new java.awt.Color(235, 235, 211));
        painelVerificarEmpresa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        vNomeEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vNomeEmpresaActionPerformed(evt);
            }
        });

        jLabel49.setText("Nome:");

        jLabel50.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel50.setText("Consultar empresa");

        bConsultarEmpresaPainel.setBackground(new java.awt.Color(8, 61, 119));
        bConsultarEmpresaPainel.setForeground(new java.awt.Color(255, 255, 255));
        bConsultarEmpresaPainel.setText("Consultar");
        bConsultarEmpresaPainel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConsultarEmpresaPainelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelVerificarEmpresaLayout = new javax.swing.GroupLayout(painelVerificarEmpresa);
        painelVerificarEmpresa.setLayout(painelVerificarEmpresaLayout);
        painelVerificarEmpresaLayout.setHorizontalGroup(
            painelVerificarEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelVerificarEmpresaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelVerificarEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelVerificarEmpresaLayout.createSequentialGroup()
                        .addComponent(jLabel49)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(vNomeEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel50)
                    .addComponent(bConsultarEmpresaPainel))
                .addGap(6, 10, Short.MAX_VALUE))
        );
        painelVerificarEmpresaLayout.setVerticalGroup(
            painelVerificarEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelVerificarEmpresaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel50)
                .addGap(18, 18, 18)
                .addGroup(painelVerificarEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(vNomeEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bConsultarEmpresaPainel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelInfos.setBackground(new java.awt.Color(235, 235, 211));
        painelInfos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        painelInfos.setForeground(new java.awt.Color(45, 48, 71));

        labelTCarros.setText("Veículos cadastrados:");

        labelQtdFuncionarios.setText("nulo");

        labelQtdCarros.setText("nulo");

        labelTEmpresas.setText("Empresas cadastradas:");

        labelQtdEmpresas.setText("nulo");

        labelTFuncionarios.setText("Funcionários cadastrados:");

        javax.swing.GroupLayout painelInfosLayout = new javax.swing.GroupLayout(painelInfos);
        painelInfos.setLayout(painelInfosLayout);
        painelInfosLayout.setHorizontalGroup(
            painelInfosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelInfosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelInfosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelInfosLayout.createSequentialGroup()
                        .addComponent(labelTFuncionarios)
                        .addGap(12, 12, 12)
                        .addComponent(labelQtdFuncionarios))
                    .addGroup(painelInfosLayout.createSequentialGroup()
                        .addComponent(labelTCarros, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(labelQtdCarros))
                    .addGroup(painelInfosLayout.createSequentialGroup()
                        .addComponent(labelTEmpresas, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelQtdEmpresas)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelInfosLayout.setVerticalGroup(
            painelInfosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelInfosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painelInfosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTFuncionarios)
                    .addComponent(labelQtdFuncionarios))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelInfosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTCarros)
                    .addComponent(labelQtdCarros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelInfosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTEmpresas)
                    .addComponent(labelQtdEmpresas))
                .addContainerGap())
        );

        labelPermissoesHcs.setBackground(new java.awt.Color(255, 255, 255));
        labelPermissoesHcs.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        labelPermissoesHcs.setForeground(new java.awt.Color(0, 100, 100));
        labelPermissoesHcs.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPermissoesHcs.setText("Permissões HCS ON");
        labelPermissoesHcs.setToolTipText("");
        labelPermissoesHcs.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        labelEmpresa.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelEmpresa.setForeground(new java.awt.Color(100, 0, 0));
        labelEmpresa.setText("nulo");

        bEncerrarSessao.setBackground(new java.awt.Color(100, 100, 100));
        bEncerrarSessao.setForeground(new java.awt.Color(255, 255, 255));
        bEncerrarSessao.setText("Encerrar Sessão");
        bEncerrarSessao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEncerrarSessaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(painelVerificarFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelVerificarCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelVerificarDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(painelVerificarEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(painelRemoverFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(painelCadastroFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(painelRemoverCarro, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(painelRemoverDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(painelRemoverEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(painelCadastroCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(painelCadastroDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(painelCadastroEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(bRemover, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bEditar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bCadastrar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(bCadastrarFuncionario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bCadastrarCarro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bCadastrarDispositivo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bCadastrarEmpresa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bEditarDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bEditarCarro, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bEditarEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bEditarFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bRemoverCarro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bRemoverFuncionario, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(bRemoverDispositivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bRemoverEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bConsultarCarro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bConsultarFuncionario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bConsultarDispositivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bConsultarEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(painelInfos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelTitulo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelEmpresa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelPermissoesHcs))
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bEncerrarSessao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEmpresa)
                    .addComponent(labelPermissoesHcs)
                    .addComponent(bEncerrarSessao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(bInicio))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(bCadastrar)
                                            .addComponent(bCadastrarFuncionario))
                                        .addGap(18, 18, 18)
                                        .addComponent(bEditar)
                                        .addGap(18, 18, 18)
                                        .addComponent(bRemover))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addComponent(bCadastrarCarro)
                                        .addGap(18, 18, 18)
                                        .addComponent(bCadastrarDispositivo)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bCadastrarEmpresa)
                                    .addComponent(bConsultar)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bEditarFuncionario)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addComponent(bEditarCarro)
                                        .addGap(18, 18, 18)
                                        .addComponent(bEditarDispositivo)))
                                .addGap(18, 18, 18)
                                .addComponent(bEditarEmpresa))
                            .addComponent(painelInfos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(painelCadastroDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(painelCadastroEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(painelCadastroCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(painelCadastroFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(bRemoverFuncionario)
                                .addComponent(bConsultarFuncionario))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bRemoverCarro)
                                    .addComponent(bConsultarCarro))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bRemoverDispositivo)
                            .addComponent(bConsultarDispositivo))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bRemoverEmpresa)
                            .addComponent(bConsultarEmpresa))))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(painelRemoverCarro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelRemoverDispositivo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelRemoverEmpresa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelRemoverFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(painelVerificarCarro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelVerificarDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(painelVerificarFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(painelVerificarEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCadastrarActionPerformed
        // TODO add your handling code here:    
        painelRemoverFuncionario.setVisible(false);
        painelRemoverCarro.setVisible(false);
        painelRemoverDispositivo.setVisible(false);
        painelRemoverEmpresa.setVisible(false);

        painelVerificarFuncionario.setVisible(false);
        painelVerificarCarro.setVisible(false);
        painelVerificarDispositivo.setVisible(false);
        painelVerificarEmpresa.setVisible(false);

        bInicio.setVisible(true);

        bCadastrar.setVisible(false);
        bEditar.setVisible(false);
        bRemover.setVisible(false);
        bConsultar.setVisible(false);

        bCadastrarFuncionario.setVisible(true);
        bEditarFuncionario.setVisible(false);
        bRemoverFuncionario.setVisible(false);
        bConsultarFuncionario.setVisible(false);

        bCadastrarCarro.setVisible(true);
        bEditarCarro.setVisible(false);
        bRemoverCarro.setVisible(false);
        bConsultarCarro.setVisible(false);

        bCadastrarDispositivo.setVisible(true);
        bEditarDispositivo.setVisible(false);
        bRemoverDispositivo.setVisible(false);
        bConsultarDispositivo.setVisible(false);

        if (importLogin != 1) {
            bCadastrarEmpresa.setVisible(false);
        } else {
            bCadastrarEmpresa.setVisible(true);
        }

        bEditarEmpresa.setVisible(false);
        bRemoverEmpresa.setVisible(false);
        bConsultarEmpresa.setVisible(false);

        labelTFuncionarios.setVisible(false);
        labelTCarros.setVisible(false);
        labelTEmpresas.setVisible(false);
        labelQtdFuncionarios.setVisible(false);
        labelQtdCarros.setVisible(false);
        labelQtdEmpresas.setVisible(false);

        painelInfos.setVisible(false);
    }//GEN-LAST:event_bCadastrarActionPerformed

    private void bRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRemoverActionPerformed
        // TODO add your handling code here:
        painelRemoverFuncionario.setVisible(false);
        painelRemoverCarro.setVisible(false);
        painelRemoverDispositivo.setVisible(false);
        painelRemoverEmpresa.setVisible(false);

        painelVerificarFuncionario.setVisible(false);
        painelVerificarCarro.setVisible(false);
        painelVerificarDispositivo.setVisible(false);
        painelVerificarEmpresa.setVisible(false);

        bInicio.setVisible(true);

        bCadastrar.setVisible(false);
        bEditar.setVisible(false);
        bRemover.setVisible(false);
        bConsultar.setVisible(false);

        bCadastrarFuncionario.setVisible(false);
        bEditarFuncionario.setVisible(false);
        bRemoverFuncionario.setVisible(true);
        bConsultarFuncionario.setVisible(false);

        bCadastrarCarro.setVisible(false);
        bEditarCarro.setVisible(false);
        bRemoverCarro.setVisible(true);
        bConsultarCarro.setVisible(false);

        bCadastrarDispositivo.setVisible(false);
        bEditarDispositivo.setVisible(false);
        bRemoverDispositivo.setVisible(true);
        bConsultarDispositivo.setVisible(false);

        bCadastrarEmpresa.setVisible(false);
        bEditarEmpresa.setVisible(false);

        if (importLogin != 1) {
            bRemoverEmpresa.setVisible(false);
        } else {
            bRemoverEmpresa.setVisible(true);
        }

        bConsultarEmpresa.setVisible(false);
        labelTFuncionarios.setVisible(false);
        labelTCarros.setVisible(false);
        labelTEmpresas.setVisible(false);
        labelQtdFuncionarios.setVisible(false);
        labelQtdCarros.setVisible(false);
        labelQtdEmpresas.setVisible(false);

        painelInfos.setVisible(false);
    }//GEN-LAST:event_bRemoverActionPerformed

    private void bEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditarActionPerformed
        // TODO add your handling code here:
        bInicio.setVisible(true);

        bCadastrar.setVisible(false);
        bEditar.setVisible(false);
        bRemover.setVisible(false);
        bConsultar.setVisible(false);

        bCadastrarFuncionario.setVisible(false);
        bEditarFuncionario.setVisible(true);
        bRemoverFuncionario.setVisible(false);
        bConsultarFuncionario.setVisible(false);

        bCadastrarCarro.setVisible(false);
        bEditarCarro.setVisible(true);
        bRemoverCarro.setVisible(false);
        bConsultarCarro.setVisible(false);

        bCadastrarDispositivo.setVisible(false);
        bEditarDispositivo.setVisible(true);
        bRemoverDispositivo.setVisible(false);
        bConsultarDispositivo.setVisible(false);

        bCadastrarEmpresa.setVisible(false);
        bEditarEmpresa.setVisible(true);
        bRemoverEmpresa.setVisible(false);
        bConsultarEmpresa.setVisible(false);

        labelTFuncionarios.setVisible(false);
        labelTCarros.setVisible(false);
        labelTEmpresas.setVisible(false);
        labelQtdFuncionarios.setVisible(false);
        labelQtdCarros.setVisible(false);
        labelQtdEmpresas.setVisible(false);

        painelInfos.setVisible(false);
    }//GEN-LAST:event_bEditarActionPerformed

    private void bCadastrarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCadastrarFuncionarioActionPerformed
        // TODO add your handling code here:
        painelCadastroFuncionario.setVisible(true);
        painelCadastroCarro.setVisible(false);
        painelCadastroDispositivo.setVisible(false);
        painelCadastroEmpresa.setVisible(false);
    }//GEN-LAST:event_bCadastrarFuncionarioActionPerformed

    private void bEditarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditarFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bEditarFuncionarioActionPerformed

    private void bRemoverFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRemoverFuncionarioActionPerformed
        // TODO add your handling code here:
        painelRemoverFuncionario.setVisible(true);
        painelRemoverCarro.setVisible(false);
        painelRemoverDispositivo.setVisible(false);
        painelRemoverEmpresa.setVisible(false);
    }//GEN-LAST:event_bRemoverFuncionarioActionPerformed

    private void bCadastrarCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCadastrarCarroActionPerformed
        // TODO add your handling code here:
        painelCadastroFuncionario.setVisible(false);
        painelCadastroCarro.setVisible(true);
        painelCadastroDispositivo.setVisible(false);
        painelCadastroEmpresa.setVisible(false);
    }//GEN-LAST:event_bCadastrarCarroActionPerformed

    private void bEditarCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditarCarroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bEditarCarroActionPerformed

    private void bRemoverCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRemoverCarroActionPerformed
        // TODO add your handling code here:
        painelRemoverFuncionario.setVisible(false);
        painelRemoverCarro.setVisible(true);
        painelRemoverDispositivo.setVisible(false);
        painelRemoverEmpresa.setVisible(false);
    }//GEN-LAST:event_bRemoverCarroActionPerformed

    private void bInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInicioActionPerformed
        // TODO add your handling code here:

        painelCadastroFuncionario.setVisible(false);
        painelCadastroCarro.setVisible(false);
        painelCadastroDispositivo.setVisible(false);
        painelCadastroEmpresa.setVisible(false);

        painelRemoverFuncionario.setVisible(false);
        painelRemoverCarro.setVisible(false);
        painelRemoverDispositivo.setVisible(false);
        painelRemoverEmpresa.setVisible(false);

        painelVerificarFuncionario.setVisible(false);
        painelVerificarCarro.setVisible(false);
        painelVerificarDispositivo.setVisible(false);
        painelVerificarEmpresa.setVisible(false);

        bInicio.setVisible(false);

        bCadastrar.setVisible(true);
        bEditar.setVisible(true);
        bRemover.setVisible(true);
        bConsultar.setVisible(true);

        bCadastrarFuncionario.setVisible(false);
        bEditarFuncionario.setVisible(false);
        bRemoverFuncionario.setVisible(false);
        bConsultarFuncionario.setVisible(false);

        bCadastrarCarro.setVisible(false);
        bEditarCarro.setVisible(false);
        bRemoverCarro.setVisible(false);
        bConsultarCarro.setVisible(false);

        bCadastrarDispositivo.setVisible(false);
        bEditarDispositivo.setVisible(false);
        bRemoverDispositivo.setVisible(false);
        bConsultarDispositivo.setVisible(false);

        bCadastrarEmpresa.setVisible(false);
        bEditarEmpresa.setVisible(false);
        bRemoverEmpresa.setVisible(false);
        bConsultarEmpresa.setVisible(false);

        labelTFuncionarios.setVisible(true);
        labelTCarros.setVisible(true);
        labelTEmpresas.setVisible(true);
        labelQtdFuncionarios.setVisible(true);
        labelQtdCarros.setVisible(true);
        labelQtdEmpresas.setVisible(true);

        painelInfos.setVisible(true);
    }//GEN-LAST:event_bInicioActionPerformed

    private void bRemoverDispositivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRemoverDispositivoActionPerformed
        // TODO add your handling code here:
        painelRemoverFuncionario.setVisible(false);
        painelRemoverCarro.setVisible(false);
        painelRemoverDispositivo.setVisible(true);
        painelRemoverEmpresa.setVisible(false);
    }//GEN-LAST:event_bRemoverDispositivoActionPerformed

    private void bEditarDispositivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditarDispositivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bEditarDispositivoActionPerformed

    private void bCadastrarDispositivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCadastrarDispositivoActionPerformed
        // TODO add your handling code here:
        painelCadastroFuncionario.setVisible(false);
        painelCadastroCarro.setVisible(false);
        painelCadastroDispositivo.setVisible(true);
        painelCadastroEmpresa.setVisible(false);
    }//GEN-LAST:event_bCadastrarDispositivoActionPerformed

    private void bCadastrarEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCadastrarEmpresaActionPerformed
        // TODO add your handling code here:
        painelCadastroFuncionario.setVisible(false);
        painelCadastroCarro.setVisible(false);
        painelCadastroDispositivo.setVisible(false);
        painelCadastroEmpresa.setVisible(true);
    }//GEN-LAST:event_bCadastrarEmpresaActionPerformed

    private void bEditarEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditarEmpresaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bEditarEmpresaActionPerformed

    private void bRemoverEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRemoverEmpresaActionPerformed
        // TODO add your handling code here:
        painelRemoverFuncionario.setVisible(false);
        painelRemoverCarro.setVisible(false);
        painelRemoverDispositivo.setVisible(false);
        painelRemoverEmpresa.setVisible(true);
    }//GEN-LAST:event_bRemoverEmpresaActionPerformed

    private void bConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConsultarActionPerformed
        // TODO add your handling code here:
        bInicio.setVisible(true);

        bCadastrar.setVisible(false);
        bEditar.setVisible(false);
        bRemover.setVisible(false);
        bConsultar.setVisible(false);

        bCadastrarFuncionario.setVisible(false);
        bEditarFuncionario.setVisible(false);
        bRemoverFuncionario.setVisible(false);
        bConsultarFuncionario.setVisible(true);

        bCadastrarCarro.setVisible(false);
        bEditarCarro.setVisible(false);
        bRemoverCarro.setVisible(false);
        bConsultarCarro.setVisible(true);

        bCadastrarDispositivo.setVisible(false);
        bEditarDispositivo.setVisible(false);
        bRemoverDispositivo.setVisible(false);
        bConsultarDispositivo.setVisible(true);

        bCadastrarEmpresa.setVisible(false);
        bEditarEmpresa.setVisible(false);
        bRemoverEmpresa.setVisible(false);
        bConsultarEmpresa.setVisible(true);

        labelTFuncionarios.setVisible(false);
        labelTCarros.setVisible(false);
        labelTEmpresas.setVisible(false);
        labelQtdFuncionarios.setVisible(false);
        labelQtdCarros.setVisible(false);
        labelQtdEmpresas.setVisible(false);

        painelInfos.setVisible(false);
    }//GEN-LAST:event_bConsultarActionPerformed

    private void bConsultarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConsultarFuncionarioActionPerformed
        // TODO add your handling code here:
        painelVerificarFuncionario.setVisible(true);
        painelVerificarCarro.setVisible(false);
        painelVerificarDispositivo.setVisible(false);
        painelVerificarEmpresa.setVisible(false);
    }//GEN-LAST:event_bConsultarFuncionarioActionPerformed

    private void bConsultarCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConsultarCarroActionPerformed
        // TODO add your handling code here:
        painelVerificarFuncionario.setVisible(false);
        painelVerificarCarro.setVisible(true);
        painelVerificarDispositivo.setVisible(false);
        painelVerificarEmpresa.setVisible(false);
    }//GEN-LAST:event_bConsultarCarroActionPerformed

    private void bConsultarEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConsultarEmpresaActionPerformed
        // TODO add your handling code here:
        painelVerificarFuncionario.setVisible(false);
        painelVerificarCarro.setVisible(false);
        painelVerificarDispositivo.setVisible(false);
        painelVerificarEmpresa.setVisible(true);
    }//GEN-LAST:event_bConsultarEmpresaActionPerformed

    private void bConsultarDispositivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConsultarDispositivoActionPerformed
        // TODO add your handling code here:
        painelVerificarFuncionario.setVisible(false);
        painelVerificarCarro.setVisible(false);
        painelVerificarDispositivo.setVisible(true);
        painelVerificarEmpresa.setVisible(false);
    }//GEN-LAST:event_bConsultarDispositivoActionPerformed

    private void cNomeFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cNomeFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cNomeFuncionarioActionPerformed

    private void cNivelAcessoFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cNivelAcessoFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cNivelAcessoFuncionarioActionPerformed

    private void cEmailFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cEmailFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cEmailFuncionarioActionPerformed

    private void cSenhaFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cSenhaFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cSenhaFuncionarioActionPerformed

    private void bCadastrarFuncionarioPainelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCadastrarFuncionarioPainelActionPerformed
        // TODO add your handling code here:
        String nome = cNomeFuncionario.getText();
        String cpf = cCpfFuncionario.getText();
        String email = cEmailFuncionario.getText();
        String senha = cSenhaFuncionario.getText();
        String cargo = "nulo";
        Integer fkEmpresa;
        Integer nivelAcesso = cNivelAcessoFuncionario.getSelectedIndex();
        List<Funcionario> funcionarios = connection.query("SELECT * FROM Funcionario;", new BeanPropertyRowMapper(Funcionario.class));
        Boolean hasFuncionarioNome = false;
        Boolean hasFuncionarioCpf = false;
        Boolean tamanhoCpf = cpf.contains(" ");
        
        if (importLogin == 1) {
            fkEmpresa = (Integer) cIdEmpresaFuncionario.getValue();
        } else {
            fkEmpresa = importLogin;
        }
        
        if (nivelAcesso == 0) {
            JOptionPane.showMessageDialog(null, "Selecione um nível de acesso válido", "Erro", JOptionPane.ERROR_MESSAGE);
        } else if (fkEmpresa <= 0) {
            JOptionPane.showMessageDialog(null, "O ID da empresa deve ser maior que 0", "Erro", JOptionPane.ERROR_MESSAGE);
        } else if (nome.equals("") || tamanhoCpf == true || email.equals("") || senha.equals("")) {
            JOptionPane.showMessageDialog(null, "Certifique-se de que todos os campos estão preenchidos antes de continuar");
        } else {
            for (Funcionario funcionario : funcionarios) {
                if (funcionario.getNome_funcionario().equalsIgnoreCase(nome)) {
                    hasFuncionarioNome = true;
                } if (funcionario.getCpf().equalsIgnoreCase(cpf)) {
                    hasFuncionarioCpf = true;
                }
            }
            if (hasFuncionarioNome == true) {
                JOptionPane.showMessageDialog(null, "Um funcionário com este nome já existe!", "Erro", JOptionPane.ERROR_MESSAGE);
                cNomeFuncionario.setText("");
            } else if (hasFuncionarioCpf == true) {
                JOptionPane.showMessageDialog(null, "Um funcionário com este CPF já existe!", "Erro", JOptionPane.ERROR_MESSAGE);
                cCpfFuncionario.setText("");
            } else {      
            switch (nivelAcesso) {
                case 1:
                    cargo = "ADM";
                    break;
                case 2:
                    cargo = "GES";
                    break;
                case 3:
                    cargo = "TEC";
                    break;
                default:
                    break;
            }
            String formatacaoNome = "'" + nome + "'";
            String formatacaoCpf = "'" + cpf + "'";
            String formatacaoEmail = "'" + email + "'";
            String formatacaoSenha = "'" + senha + "'";
            String formatacaoCargo = "'" + cargo + "'";

            String instrucaoSql = "insert into Funcionario (nome_funcionario, cpf, email, senha, cargo, fk_empresa) values ("
                    + formatacaoNome + ","
                    + formatacaoCpf + ","
                    + formatacaoEmail + ","
                    + formatacaoSenha + ","
                    + formatacaoCargo + ","
                    + fkEmpresa + ")";
            connection.execute(instrucaoSql);
        JOptionPane.showMessageDialog(null, "O funcionário " + "'"+ nome + "'" +" foi adicionado ao banco de dados");
        cNomeFuncionario.setText("");
        cCpfFuncionario.setText("");
        cEmailFuncionario.setText("");
        cSenhaFuncionario.setText("");
        cIdEmpresaFuncionario.setValue(0);
            }
        }
    }//GEN-LAST:event_bCadastrarFuncionarioPainelActionPerformed

    private void cModeloCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cModeloCarroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cModeloCarroActionPerformed

    private void bCadastrarCarroPainelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCadastrarCarroPainelActionPerformed
        // TODO add your handling code here:
        String mac = cMacCarro.getText().toUpperCase();
        String placa = cPlacaCarro.getText().toUpperCase();
        String modelo = cModeloCarro.getText();
        Integer fkEmpresa = null;
        List<Carro> carros = connection.query("SELECT * FROM Carro;", new BeanPropertyRowMapper(Carro.class));
        String instrucaoSql = "";
        Boolean hasMacCarro = false;
        Boolean hasPlacaCarro = false;
        Boolean tamanhoMac = mac.contains(" ");
        Boolean tamanhoPlaca = placa.contains(" ");

        if (importLogin == 1) {
            fkEmpresa = (Integer) cIdEmpresaCarro.getValue();
        } else {
            fkEmpresa = importLogin;
        }

        if (tamanhoMac == true || tamanhoPlaca == true || modelo.equals("") || fkEmpresa <= 0) {
            JOptionPane.showMessageDialog(null, "Certifique-se de que todos os campos estão preenchidos antes de continuar");
        } else {
            for (Carro carro : carros) {
                if (carro.getEndereco_mac().equalsIgnoreCase(mac)) {
                    hasMacCarro = true;
                }
                if (carro.getPlaca_carro().equalsIgnoreCase(placa)) {
                    hasPlacaCarro = true;
                }
            }
            if (hasMacCarro == true) {
                JOptionPane.showMessageDialog(null, "Um carro com este endereço MAC já existe!");
                cMacCarro.setText("");
            } else if (hasPlacaCarro == true) {
                JOptionPane.showMessageDialog(null, "Um carro com esta placa já existe!");
                cPlacaCarro.setText("");
            } else {
                String formatacaoMac = "'" + mac + "'";
                String formatacaoPlaca = "'" + placa + "'";
                String formatacaoModelo = "'" + modelo + "'";

                instrucaoSql = "insert into Carro (endereco_mac, placa_carro, modelo, fk_empresa) values ("
                        + formatacaoMac + ","
                        + formatacaoPlaca + ","
                        + formatacaoModelo + ","
                        + fkEmpresa + ")";
                
                connection.execute(instrucaoSql);
                JOptionPane.showMessageDialog(null, "O veículo " + "'" + modelo + "'" + " foi cadastrado no banco de dados \n"
                        + "Lembre-se de cadastrar os 4 dispositivos deste veículo");
                cMacCarro.setText("");
                cPlacaCarro.setText("");
                cModeloCarro.setText("");
            }
        }
    }//GEN-LAST:event_bCadastrarCarroPainelActionPerformed

    private void cTipoDispositivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cTipoDispositivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cTipoDispositivoActionPerformed

    private void cModeloDispositivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cModeloDispositivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cModeloDispositivoActionPerformed

    private void bCadastrarDispositivoPainelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCadastrarDispositivoPainelActionPerformed
        // TODO add your handling code here:
        String tipo = cTipoDispositivo.getText().toUpperCase();
        String modelo = cModeloDispositivo.getText();
        String unidadeMedida = cUnidadeMedidaDispositivo.getText();
        Integer fkCarro = (Integer) cIdCarroDispositivo.getValue();;
        List<Dispositivo> dispositivos;
        Boolean hasModeloDispositivo = false;  
        Boolean hasCarroEmpresa = false;
        Integer fkEmpresa = 0;

        if (tipo.equals("") || modelo.equals("") || unidadeMedida.equals("")) {
            JOptionPane.showMessageDialog(null, "Certifique-se de que todos os campos estão preenchidos antes de continuar");
        } else if (fkCarro <= 0) {
            JOptionPane.showMessageDialog(null, "O ID do veículo deve ser maior que 0");
        } else {
            if (importLogin != 1) {    
                List<Carro> carros = connection.query("SELECT * FROM Carro where fk_empresa = " + importLogin + ";", new BeanPropertyRowMapper(Carro.class));   
                for (Carro carro : carros) {
                    if (carro.getId_carro().equals(fkCarro)) {
                        hasCarroEmpresa = true;
                        fkEmpresa = carro.getFk_empresa();
                    }
                }
            } else {
                hasCarroEmpresa = true;
            }
            
            String instrucaoSqlSelect = "SELECT * FROM Dispositivo;";
            dispositivos = connection.query(instrucaoSqlSelect, new BeanPropertyRowMapper(Dispositivo.class));
            for (Dispositivo dispositivo : dispositivos) {
                if (fkEmpresa.equals(importLogin)) {
                    hasCarroEmpresa = true;
                }
            }

            if (hasCarroEmpresa == false) {
                JOptionPane.showMessageDialog(null, "O cadastro só pode ser efetuado em veículos desta empresa", "Erro", JOptionPane.ERROR_MESSAGE);
            } else {
                String formatacaoTipo = "'" + tipo + "'";
                String formatacaoModelo = "'" + modelo + "'";
                String formatacaoUnidadeMedida = "'" + unidadeMedida + "'";

                String instrucaoSqlInsert = "insert into Dispositivo (tipo, modelo, unid_medida, fk_carro) values ("
                        + formatacaoTipo + ","
                        + formatacaoModelo + ","
                        + formatacaoUnidadeMedida + ","
                        + fkCarro + ")";
                connection.execute(instrucaoSqlInsert);
                JOptionPane.showMessageDialog(null, "O dispositivo " + modelo + " foi cadastrado no banco de dados");
                cTipoDispositivo.setText("");
                cModeloDispositivo.setText("");
                cUnidadeMedidaDispositivo.setText("");
                cIdCarroDispositivo.setValue(0);
            }
        }
    }//GEN-LAST:event_bCadastrarDispositivoPainelActionPerformed

    private void cNomeEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cNomeEmpresaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cNomeEmpresaActionPerformed

    private void bCadastrarEmpresaPainelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCadastrarEmpresaPainelActionPerformed
        // TODO add your handling code here:
        String nomeEmpresa = cNomeEmpresa.getText();
        String cnpj = cCnpjEmpresa.getText();
        List<Empresa> empresas = connection.query("SELECT * FROM Empresa;", new BeanPropertyRowMapper(Empresa.class));
        Boolean hasNomeEmpresa = false;
        Boolean hasCnpjEmpresa = false;
        boolean tamanhoCnpj = cnpj.contains(" ");

        if (nomeEmpresa.equals("") || tamanhoCnpj == true) {
            JOptionPane.showMessageDialog(null, "Certifique-se de que todos os campos estão preenchidos corretamente antes de continuar");
        } else {
            for (Empresa empresa : empresas) {
                if (empresa.getNome_empresa().equalsIgnoreCase(nomeEmpresa)) {
                    hasNomeEmpresa = true;
                }
                if (empresa.getCnpj().equalsIgnoreCase(cnpj)) {
                    hasCnpjEmpresa = true;
                }
            }
            if (hasNomeEmpresa == true) {
                JOptionPane.showMessageDialog(null, "Uma empresa com este nome já existe!");
            } else if (hasCnpjEmpresa == true) {
                JOptionPane.showMessageDialog(null, "Uma empresa com este CNPJ já existe!");
                cCnpjEmpresa.setText("");
            } else {
                String formatacaoNomeEmpresa = "'" + nomeEmpresa + "'";
                String formatacaoCnpj = "'" + cnpj + "'";

                String instrucaoSql = "insert into Empresa (nome_empresa, cnpj) values (" + formatacaoNomeEmpresa + "," + formatacaoCnpj + ")";
                connection.execute(instrucaoSql);
                JOptionPane.showMessageDialog(null, "A empresa " + nomeEmpresa + " foi adicionada ao banco de dados");
                cNomeEmpresa.setText("");
                cCnpjEmpresa.setText("");
            }
        }
    }//GEN-LAST:event_bCadastrarEmpresaPainelActionPerformed

    private void rNomeFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rNomeFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rNomeFuncionarioActionPerformed

    private void bRemoverFuncionarioPainelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRemoverFuncionarioPainelActionPerformed
        // TODO add your handling code here:
        String nomeFuncionario = rNomeFuncionario.getText();
        String cpf = rCpfFuncionario.getText();
        List<Funcionario> funcionarios;
        Boolean hasFuncionario = false;
        Boolean tamanhoCpf = cpf.contains(" ");
        String instrucaoSqlSelect;
        String instrucaoSqlDelete;

        if (importLogin != 1) {
            instrucaoSqlSelect = "SELECT * FROM Funcionario where fk_empresa = " + importLogin + ";";
            funcionarios = connection.query(instrucaoSqlSelect, new BeanPropertyRowMapper(Funcionario.class));
        } else {
            instrucaoSqlSelect = "SELECT * FROM Funcionario";
            funcionarios = connection.query(instrucaoSqlSelect, new BeanPropertyRowMapper(Funcionario.class));
        }

        if (nomeFuncionario.equals("") || tamanhoCpf == true) {
            JOptionPane.showMessageDialog(null, "Certifique-se de que todos os campos estão preenchidos antes de continuar");
        } else {
            for (Funcionario funcionario : funcionarios) {
                if (funcionario.getNome_funcionario().equalsIgnoreCase(nomeFuncionario) && funcionario.getCpf().equalsIgnoreCase(cpf)) {
                    hasFuncionario = true;
                }
            }
            if (hasFuncionario == false) {
                JOptionPane.showMessageDialog(null, "O funcionário " + "'" + nomeFuncionario + "'" + " com o CPF " + cpf + " não existe!\n" + "Cancelando instrução SQL...");
                cCpfFuncionario.setText("");
            } else {
                String formatacaoNomeFuncionario = "'" + nomeFuncionario + "'";
                String formatacaoCpf = "'" + cpf + "'";
                
                if (importLogin != 1) {
                    instrucaoSqlDelete = "delete from Funcionario where nome_funcionario = " + formatacaoNomeFuncionario + "and cpf = " + formatacaoCpf + "and fk_empresa = " + importLogin;
                } else {
                    instrucaoSqlDelete = "delete from Funcionario where nome_funcionario = " + formatacaoNomeFuncionario + "and cpf = " + formatacaoCpf;
                }
                connection.execute(instrucaoSqlDelete);
                JOptionPane.showMessageDialog(null, "O funcionário " + "'" + nomeFuncionario + "'" + " foi removido do banco de dados");
                rNomeFuncionario.setText("");
                rCpfFuncionario.setText("");
            }
        }
    }//GEN-LAST:event_bRemoverFuncionarioPainelActionPerformed

    private void rModeloDispositivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rModeloDispositivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rModeloDispositivoActionPerformed

    private void bRemoverDispositivoPainelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRemoverDispositivoPainelActionPerformed
        // TODO add your handling code here:
        String modeloDispositivo = rModeloDispositivo.getText();
        Integer fkCarro = (Integer) rIdCarroDispositivo.getValue();
        Integer fkEmpresa = 0;
        List<Dispositivo> dispositivos = connection.query("SELECT * FROM Dispositivo;", new BeanPropertyRowMapper(Dispositivo.class));
        List<Carro> carros = connection.query("SELECT * FROM Carro;", new BeanPropertyRowMapper(Carro.class));
        Boolean hasDispositivo = false;

        if (modeloDispositivo.equals("")) {
            JOptionPane.showMessageDialog(null, "Certifique-se de que todos os campos estão preenchidos antes de continuar");
        } else if (fkCarro <= 0) {
            JOptionPane.showMessageDialog(null, "O ID do veículo deve ser maior que 0");
        } else {
            for (Dispositivo dispositivo : dispositivos) {
                if (dispositivo.getModelo().equalsIgnoreCase(modeloDispositivo) && dispositivo.getFk_carro().equals(fkCarro)) {
                    hasDispositivo = true;
                }
            }
            if (hasDispositivo == false) {
                JOptionPane.showMessageDialog(null, "O dispositivo " + "'" + modeloDispositivo + "'" + " no carro de ID " + "'" + fkCarro + "'" + " não existe!\n" + "Cancelando instrução SQL...");
            } else {
                String formatacaoModeloDispositivo = "'" + modeloDispositivo + "'";

                if (fkCarro > 0) {
                    String instrucaoSql = "delete from Dispositivo where modelo = " + formatacaoModeloDispositivo + "and fk_carro = " + fkCarro;

                    for (Carro carro : carros) {
                        if (carro.getId_carro().equals(fkCarro)) {
                            fkEmpresa = carro.getFk_empresa();
                        }
                    }

                    if (importLogin != 1 && !(fkEmpresa.equals(importLogin))) {
                        JOptionPane.showMessageDialog(null, "Este dispositivo não pertence a um carro desta empresa");
                    } else {
                        connection.execute(instrucaoSql);
                        JOptionPane.showMessageDialog(null, "O dispositivo " + "'" + modeloDispositivo + "'" + " foi removido do banco de dados");
                        rModeloDispositivo.setText("");
                        rIdCarroDispositivo.setValue(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_bRemoverDispositivoPainelActionPerformed

    private void bRemoverCarroPainelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRemoverCarroPainelActionPerformed
        // TODO add your handling code here:
        String mac = rMacCarro.getText().toUpperCase();
        String placa = rPlacaCarro.getText().toUpperCase();
        String modelo = "";
        String instrucaoSqlSelect;
        String instrucaoSqlDeleteCarro;
        Boolean tamanhoMac = mac.contains(" ");
        Boolean tamanhoPlaca = placa.contains(" ");
        Integer idCarro = 0;
        List<Carro> carros;
        List<Dispositivo> dispositivos = connection.query("SELECT * FROM Dispositivo;", new BeanPropertyRowMapper(Dispositivo.class));

        if (importLogin != 1) {
            instrucaoSqlSelect = "SELECT * FROM Carro where fk_empresa = " + importLogin;
            carros = connection.query(instrucaoSqlSelect, new BeanPropertyRowMapper(Carro.class));;
        } else {
            instrucaoSqlSelect = "SELECT * FROM Carro;";
            carros = connection.query(instrucaoSqlSelect, new BeanPropertyRowMapper(Carro.class));
        }
        Boolean hasCarro = false;

        if (tamanhoMac == true || tamanhoPlaca == true) {
            JOptionPane.showMessageDialog(null, "Certifique-se de que todos os campos estão preenchidos antes de continuar");
        } else {
            for (Carro carro : carros) {
                if (carro.getEndereco_mac().equalsIgnoreCase(mac) && carro.getPlaca_carro().equalsIgnoreCase(placa)) {
                    hasCarro = true;
                    modelo = carro.getModelo();
                    idCarro = carro.getId_carro();
                }
            }
            if (hasCarro == false) {
                JOptionPane.showMessageDialog(null, "O carro de placa " + "'" + placa + "'" + " com o endereço MAC " + "'" + mac + "'" + " não existe!\n" + "Cancelando instrução SQL...");
                rMacCarro.setText("");
            } else {
                String formatacaoMac = "'" + mac + "'";
                String formatacaoPlaca = "'" + placa + "'";

                if (importLogin != 1) {
                    instrucaoSqlDeleteCarro = "delete from Carro where endereco_mac = " + formatacaoMac + "and placa_carro = " + formatacaoPlaca + "and fk_empresa = " + importLogin;
                } else {
                    instrucaoSqlDeleteCarro = "delete from Carro where endereco_mac = " + formatacaoMac + "and placa_carro = " + formatacaoPlaca;
                }
                for (Dispositivo dispositivo : dispositivos) {
                    String instrucaoSqlDeleteDispositivos = "delete from Dispositivo where fk_carro = " + idCarro + ";";
                    connection.execute(instrucaoSqlDeleteDispositivos);
                }
                connection.execute(instrucaoSqlDeleteCarro);
                JOptionPane.showMessageDialog(null, "O veículo " + "'" + modelo + "'" + "e seus dispositivos foram removidos do banco de dados");
                rMacCarro.setText("");
                rPlacaCarro.setText("");
            }
        }
    }//GEN-LAST:event_bRemoverCarroPainelActionPerformed

    private void rNomeEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rNomeEmpresaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rNomeEmpresaActionPerformed

    private void bRemoverEmpresaPainelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRemoverEmpresaPainelActionPerformed
        // TODO add your handling code here:
        String nomeEmpresa = rNomeEmpresa.getText();
        String cnpj = rCnpjEmpresa.getText();
        List<Funcionario> funcionarios = connection.query("SELECT * FROM Funcionario;", new BeanPropertyRowMapper(Funcionario.class));
        List<Empresa> empresas = connection.query("SELECT * FROM Empresa;", new BeanPropertyRowMapper(Empresa.class));
        List<Carro> carros = connection.query("SELECT * FROM Carro;", new BeanPropertyRowMapper(Carro.class));
        List<Dispositivo> dispositivos = connection.query("SELECT * FROM Dispositivo;", new BeanPropertyRowMapper(Dispositivo.class));
        Boolean hasEmpresa = false;
        Boolean tamanhoCnpj = cnpj.contains(" ");
        Integer idEmpresa = 0;
        Integer idCarro = 0;

        if (nomeEmpresa.equals("") || tamanhoCnpj == true) {
            JOptionPane.showMessageDialog(null, "Certifique-se de que todos os campos estão preenchidos antes de continuar");
        } else {
            for (Empresa empresa : empresas) {
                if (empresa.getNome_empresa().equalsIgnoreCase(nomeEmpresa) && empresa.getCnpj().equalsIgnoreCase(cnpj)) {
                    hasEmpresa = true;
                    idEmpresa = empresa.getId_empresa();
                }
            }
            if (hasEmpresa == false) {
                JOptionPane.showMessageDialog(null, "A empresa " + "'" + nomeEmpresa + "'" + " com o CNPJ " + "'" + cnpj + "'" + " não existe!\n" + "Cancelando instrução SQL...");
                rCnpjEmpresa.setText("");
            } else {
                String formatacaoNomeEmpresa = "'" + nomeEmpresa + "'";
                String formatacaoCnpj = "'" + cnpj + "'";
                String instrucaoSql = "delete from Empresa where nome_empresa = " + formatacaoNomeEmpresa + "and cnpj = " + formatacaoCnpj;
                
                for (Funcionario funcionario : funcionarios) {
                    String instrucaoSqlDeleteFuncionario = "delete from Funcionario where fk_empresa = " + idEmpresa + ";";
                    connection.execute(instrucaoSqlDeleteFuncionario);
                }
                
                for (Carro carro : carros) {
                    if (carro.getFk_empresa().equals(idEmpresa)) {
                        idCarro = carro.getId_carro();
                        for (Dispositivo dispositivo : dispositivos) {
                            String instrucaoSqlDeleteDispositivos = "delete from Dispositivo where fk_carro = " + idCarro + ";";
                            connection.execute(instrucaoSqlDeleteDispositivos);
                        }
                    }
                }
                
                for (Carro carro2 : carros) {
                    String instrucaoSqlDeleteCarro = "delete from Carro where fk_empresa = " + idEmpresa + ";";
                    connection.execute(instrucaoSqlDeleteCarro);
                }
                
                connection.execute(instrucaoSql);
                JOptionPane.showMessageDialog(null, "A empresa " + "'" + nomeEmpresa + "'" + " e seus veículos foram removidos do banco de dados");
                rNomeEmpresa.setText("");
                rCnpjEmpresa.setText("");
            }
        }
    }//GEN-LAST:event_bRemoverEmpresaPainelActionPerformed

    private void vNomeFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vNomeFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vNomeFuncionarioActionPerformed

    private void bConsultarFuncionarioPainelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConsultarFuncionarioPainelActionPerformed
        // TODO add your handling code here:

        Integer id = null;
        String nome = "nulo";
        String cpf = "nulo";
        String email = "nulo";
        String cargo = "nulo";
        String empresa = "nulo";
        Integer fkEmpresa = null;

        List<Funcionario> funcionarios = connection.query("SELECT * FROM Funcionario;", new BeanPropertyRowMapper(Funcionario.class));
        List<Empresa> empresas = connection.query("SELECT * FROM Empresa;", new BeanPropertyRowMapper(Empresa.class));
        Boolean hasFuncionario = false;

        if (vNomeFuncionario.getText() != null && !(vNomeFuncionario.getText().equals(""))) {
            for (Funcionario funcionario : funcionarios) {
                if (funcionario.getNome_funcionario().equalsIgnoreCase(vNomeFuncionario.getText())) {
                    hasFuncionario = true;
                    id = funcionario.getId_funcionario();
                    nome = funcionario.getNome_funcionario();
                    cpf = funcionario.getCpf();
                    email = funcionario.getEmail();
                    cargo = funcionario.getCargo();
                    fkEmpresa = funcionario.getFk_empresa();

                    for (Empresa empresaFor : empresas) {
                        if (empresaFor.getId_empresa().equals(fkEmpresa)) {
                            empresa = empresaFor.getNome_empresa();
                        }
                    }
                }
            }
            if (hasFuncionario == true) {
                JOptionPane.showMessageDialog(null, "O funcionário " + "'" + vNomeFuncionario.getText() + "'" + " está cadastrado" + "\n"
                        + "\n"
                        + "ID: " + id + "\n"
                        + "Nome: " + nome + "\n"
                        + "CPF: " + cpf + "\n"
                        + "Email: " + email + "\n"
                        + "Cargo: " + cargo + "\n"
                        + "Funcionário da " + empresa + "\n"
                        + "ID empresa: " + fkEmpresa);
            } else {
                JOptionPane.showMessageDialog(null, "O funcionário " + "'" + vNomeFuncionario.getText() + "'" + " não foi encontrado, verifique a ortografia e tente novamente");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Certifique-se de que todos os campos estão preenchidos antes de continuar");
        }
    }//GEN-LAST:event_bConsultarFuncionarioPainelActionPerformed

    private void vModeloCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vModeloCarroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vModeloCarroActionPerformed

    private void bConsultarCarroPainelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConsultarCarroPainelActionPerformed
        // TODO add your handling code here:

        Integer id = null;
        String mac = "nulo";
        String placa = vPlacaCarro.getText();
        String modelo = "nulo";
        String empresa = "nulo";
        Integer fkEmpresa = null;
        Boolean tamanhoPlaca = placa.contains(" ");

        List<Carro> carros = connection.query("SELECT * FROM Carro;", new BeanPropertyRowMapper(Carro.class));
        List<Empresa> empresas = connection.query("SELECT * FROM Empresa;", new BeanPropertyRowMapper(Empresa.class));
        Boolean hasCarro = false;

        if (!(vModeloCarro.getText().equals("")) && tamanhoPlaca == false) {
            for (Carro carro : carros) {
                if (carro.getModelo().equalsIgnoreCase(vModeloCarro.getText()) && carro.getPlaca_carro().equalsIgnoreCase(vPlacaCarro.getText())) {
                    hasCarro = true;

                    id = carro.getId_carro();
                    mac = carro.getEndereco_mac();
                    placa = carro.getPlaca_carro();
                    modelo = carro.getModelo();
                    fkEmpresa = carro.getFk_empresa();

                    for (Empresa empresaFor : empresas) {
                        if (empresaFor.getId_empresa().equals(fkEmpresa)) {
                            empresa = empresaFor.getNome_empresa();
                        }
                    }
                }
            }
            if (hasCarro == true) {
                JOptionPane.showMessageDialog(null, "O modelo " + "'" + vModeloCarro.getText() + "'" + " foi encontrado" + "\n"
                        + "\n"
                        + "ID: " + id + "\n"
                        + "Endereço MAC: " + mac + "\n"
                        + "Placa: " + placa + "\n"
                        + "Modelo: " + modelo + "\n"
                        + "Fabricante: " + empresa + "\n"
                        + "ID empresa: " + fkEmpresa);
            } else {
                JOptionPane.showMessageDialog(null, "O carro " + "'" + vModeloCarro.getText() + "'" + " de placa " + "'" + vPlacaCarro.getText() + "'" + " não foi encontrado, verifique a ortografia e tente novamente");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Certifique-se de que todos os campos estão preenchidos antes de continuar");
        }
    }//GEN-LAST:event_bConsultarCarroPainelActionPerformed

    private void vModeloDispositivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vModeloDispositivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vModeloDispositivoActionPerformed

    private void bConsultarDispositivoPainelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConsultarDispositivoPainelActionPerformed
        // TODO add your handling code here:

        Integer id = null;
        String tipo = "nulo";
        String modelo = "nulo";
        Integer fkCarro = null;
        String modeloCarro = "nulo";
        String empresaCarro = "nulo";
        Integer valorIdCarro = (Integer) vIdCarroDispositivo.getValue();
        Boolean hasDispositivo = false;

        List<Dispositivo> dispositivos = connection.query("SELECT * FROM Dispositivo;", new BeanPropertyRowMapper(Dispositivo.class));
        List<Carro> carros = connection.query("SELECT * FROM Carro;", new BeanPropertyRowMapper(Carro.class));
        List<Empresa> empresas = connection.query("SELECT * FROM Empresa;", new BeanPropertyRowMapper(Empresa.class));

        if (vModeloDispositivo.getText() != null && !(vModeloDispositivo.getText().equals("")) && valorIdCarro > 0) {
            for (Dispositivo dispositivo : dispositivos) {
                if (dispositivo.getModelo().equalsIgnoreCase(vModeloDispositivo.getText()) && dispositivo.getFk_carro().equals(valorIdCarro)) {
                    hasDispositivo = true;
                    id = dispositivo.getId_dispositivo();
                    tipo = dispositivo.getTipo();
                    modelo = dispositivo.getModelo();
                    fkCarro = dispositivo.getFk_carro();

                    for (Carro carroFor : carros) {
                        if (carroFor.getId_carro().equals(fkCarro)) {
                            for (Empresa empresaFor : empresas) {
                                if (empresaFor.getId_empresa().equals(carroFor.getFk_empresa())) {
                                    empresaCarro = empresaFor.getNome_empresa();
                                }
                            }
                            modeloCarro = carroFor.getModelo();
                        }
                    }
                }
            }
            if (hasDispositivo == true) {
                JOptionPane.showMessageDialog(null, "O dispositivo " + "'" + vModeloDispositivo.getText() + "'" + " está cadastrado" + "\n"
                        + "\n"
                        + "ID: " + id + "\n"
                        + "Tipo: " + tipo + "\n"
                        + "Modelo: " + modelo + "\n"
                        + "ID carro: " + fkCarro + "\n"
                        + "Dispositivo do " + modeloCarro + "\n"
                        + "Fabricante do " + modeloCarro.toLowerCase() + ": " + empresaCarro + "\n");
            } else {
                JOptionPane.showMessageDialog(null, "Não existe um dispositivo com o nome de: " + "'" + vModeloDispositivo.getText() + "'" + " no carro de ID " + valorIdCarro);
            }
        } else {
            JOptionPane.showMessageDialog(null, "certifique-se de que todos os campos estão preenchidos antes de continuar");
        }
    }//GEN-LAST:event_bConsultarDispositivoPainelActionPerformed

    private void vNomeEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vNomeEmpresaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vNomeEmpresaActionPerformed

    private void bConsultarEmpresaPainelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConsultarEmpresaPainelActionPerformed
        // TODO add your handling code here:

        Integer id_empresa = null;
        String nomeEmpresa = "nulo";
        String cnpj = "nulo";
        Boolean hasEmpresa = false;
        Integer qtdCarros = 0;

        List<Empresa> empresas = connection.query("SELECT * FROM Empresa;", new BeanPropertyRowMapper(Empresa.class));

        if (vNomeEmpresa.getText() != null && !(vNomeEmpresa.getText().equals(""))) {
            for (Empresa empresa : empresas) {
                if (empresa.getNome_empresa().equalsIgnoreCase(vNomeEmpresa.getText())) {
                    hasEmpresa = true;
                    id_empresa = empresa.getId_empresa();
                    nomeEmpresa = empresa.getNome_empresa();
                    cnpj = empresa.getCnpj();
                }
            }
            
        List<Carro> carros = connection.query("SELECT * FROM Carro where fk_empresa = " + id_empresa + ";", new BeanPropertyRowMapper(Carro.class));
            for (Carro carro : carros) {
                qtdCarros++;
            }
            if (hasEmpresa == true) {
                JOptionPane.showMessageDialog(null, "A empresa " + "'" + vNomeEmpresa.getText() + "'" + " está cadastrada " + "\n"
                        + "\n"
                        + "ID: " + id_empresa + "\n"
                        + "Nome: " + nomeEmpresa + "\n"
                        + "CNPJ: " + cnpj + "\n"
                        + "Quantidade de carros cadastrados: " + qtdCarros);
            } else {
                JOptionPane.showMessageDialog(null, "A empresa " + "'" + vNomeEmpresa.getText() + "'" + " não foi encontrada, verifique a ortografia e tente novamente");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Certifique-se de que todos os campos estão preenchidos antes de continuar");
        }
    }//GEN-LAST:event_bConsultarEmpresaPainelActionPerformed

    private void cUnidadeMedidaDispositivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cUnidadeMedidaDispositivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cUnidadeMedidaDispositivoActionPerformed

    private void bEncerrarSessaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEncerrarSessaoActionPerformed
        // TODO add your handling code here:
        new TelaLogin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bEncerrarSessaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */

 /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PainelAdm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCadastrar;
    private javax.swing.JButton bCadastrarCarro;
    private javax.swing.JButton bCadastrarCarroPainel;
    private javax.swing.JButton bCadastrarDispositivo;
    private javax.swing.JButton bCadastrarDispositivoPainel;
    private javax.swing.JButton bCadastrarEmpresa;
    private javax.swing.JButton bCadastrarEmpresaPainel;
    private javax.swing.JButton bCadastrarFuncionario;
    private javax.swing.JButton bCadastrarFuncionarioPainel;
    private javax.swing.JButton bConsultar;
    private javax.swing.JButton bConsultarCarro;
    private javax.swing.JButton bConsultarCarroPainel;
    private javax.swing.JButton bConsultarDispositivo;
    private javax.swing.JButton bConsultarDispositivoPainel;
    private javax.swing.JButton bConsultarEmpresa;
    private javax.swing.JButton bConsultarEmpresaPainel;
    private javax.swing.JButton bConsultarFuncionario;
    private javax.swing.JButton bConsultarFuncionarioPainel;
    private javax.swing.JButton bEditar;
    private javax.swing.JButton bEditarCarro;
    private javax.swing.JButton bEditarDispositivo;
    private javax.swing.JButton bEditarEmpresa;
    private javax.swing.JButton bEditarFuncionario;
    private javax.swing.JButton bEncerrarSessao;
    private javax.swing.JButton bInicio;
    private javax.swing.JButton bRemover;
    private javax.swing.JButton bRemoverCarro;
    private javax.swing.JButton bRemoverCarroPainel;
    private javax.swing.JButton bRemoverDispositivo;
    private javax.swing.JButton bRemoverDispositivoPainel;
    private javax.swing.JButton bRemoverEmpresa;
    private javax.swing.JButton bRemoverEmpresaPainel;
    private javax.swing.JButton bRemoverFuncionario;
    private javax.swing.JButton bRemoverFuncionarioPainel;
    private javax.swing.JFormattedTextField cCnpjEmpresa;
    private javax.swing.JFormattedTextField cCpfFuncionario;
    private javax.swing.JTextField cEmailFuncionario;
    private javax.swing.JSpinner cIdCarroDispositivo;
    private javax.swing.JSpinner cIdEmpresaCarro;
    private javax.swing.JSpinner cIdEmpresaFuncionario;
    private javax.swing.JLabel cLabelEmpresaCarro;
    private javax.swing.JLabel cLabelIdEmpresa;
    private javax.swing.JFormattedTextField cMacCarro;
    private javax.swing.JTextField cModeloCarro;
    private javax.swing.JTextField cModeloDispositivo;
    private javax.swing.JComboBox<String> cNivelAcessoFuncionario;
    private javax.swing.JTextField cNomeEmpresa;
    private javax.swing.JTextField cNomeFuncionario;
    private javax.swing.JFormattedTextField cPlacaCarro;
    private javax.swing.JTextField cSenhaFuncionario;
    private javax.swing.JTextField cTipoDispositivo;
    private javax.swing.JTextField cUnidadeMedidaDispositivo;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JLabel labelEmpresa;
    private javax.swing.JLabel labelPermissoesHcs;
    private javax.swing.JLabel labelQtdCarros;
    private javax.swing.JLabel labelQtdEmpresas;
    private javax.swing.JLabel labelQtdFuncionarios;
    private javax.swing.JLabel labelTCarros;
    private javax.swing.JLabel labelTEmpresas;
    private javax.swing.JLabel labelTFuncionarios;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JPanel painelCadastroCarro;
    private javax.swing.JPanel painelCadastroDispositivo;
    private javax.swing.JPanel painelCadastroEmpresa;
    private javax.swing.JPanel painelCadastroFuncionario;
    private javax.swing.JPanel painelInfos;
    private javax.swing.JPanel painelRemoverCarro;
    private javax.swing.JPanel painelRemoverDispositivo;
    private javax.swing.JPanel painelRemoverEmpresa;
    private javax.swing.JPanel painelRemoverFuncionario;
    private javax.swing.JPanel painelVerificarCarro;
    private javax.swing.JPanel painelVerificarDispositivo;
    private javax.swing.JPanel painelVerificarEmpresa;
    private javax.swing.JPanel painelVerificarFuncionario;
    private javax.swing.JFormattedTextField rCnpjEmpresa;
    private javax.swing.JFormattedTextField rCpfFuncionario;
    private javax.swing.JSpinner rIdCarroDispositivo;
    private javax.swing.JFormattedTextField rMacCarro;
    private javax.swing.JTextField rModeloDispositivo;
    private javax.swing.JTextField rNomeEmpresa;
    private javax.swing.JTextField rNomeFuncionario;
    private javax.swing.JFormattedTextField rPlacaCarro;
    private javax.swing.JSpinner vIdCarroDispositivo;
    private javax.swing.JTextField vModeloCarro;
    private javax.swing.JTextField vModeloDispositivo;
    private javax.swing.JTextField vNomeEmpresa;
    private javax.swing.JTextField vNomeFuncionario;
    private javax.swing.JFormattedTextField vPlacaCarro;
    // End of variables declaration//GEN-END:variables
}
